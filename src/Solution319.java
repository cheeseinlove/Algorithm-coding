/**
 * @Author: liuxun05@meituan.com
 * @Date: 2021-01-26 23:31
 * @Description:
 */
public class Solution319 {
    /**
     每次都会间隔一定的次数进行开关操作。
     第1轮，每隔1个就会被操作。
     第2轮，每隔2个就会被操作。
     ...
     第n轮，每隔n个就会被操作。

     现在分析某个灯泡什么时候会被操作。
     举例第20个灯泡：1,2,4,5,10,20轮会被操作。
     第1轮的时候所有灯泡都会被操作，包含20灯泡
     第2轮的时候所有2的倍数灯泡都会被操作，包含20灯泡
     第4轮的时候所有4的倍数灯泡都会被操作，包含20灯泡
     也就是所有20能整除都会被操作。
     现在我们只需要找到被操作奇数次的灯泡，因为偶数次结果是关闭。

     只有完全平方数的因数个数为奇数，如16=1，2，4，8，16，问题转化为<=n有几个完全平方数，为sqrt（n）取整
     */
    public int bulbSwitch(int n) {
        if(n<1) return 0;
        return (int) Math.sqrt(n);

    }
}
